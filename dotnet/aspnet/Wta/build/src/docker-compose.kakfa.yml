include: [ "docker-compose.include.yml" ]

services:
  kafka:
    image: ${KAFKA}
    extends:
      file: docker-compose.extend.yml
      service: base
    networks:
      net:
        ipv4_address: ${KAFKA_IP}
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_KRAFT_CLUSTER_ID=1
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - ${DATA}/kafka:/bitnami/kafka
    healthcheck:
      test: [ "CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "localhost:9092" ]
  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    extends:
      file: docker-compose.extend.yml
      service: base
    networks:
      net:
        ipv4_address: ${KAFKA_UI_IP}
    environment:
      - DYNAMIC_CONFIG_ENABLED="true"
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    ports:
      - 18081:8080
    depends_on:
      kafka:
        condition: service_healthy
